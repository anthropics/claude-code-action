# Default values for Peerbot
# This is the template configuration for local development

# Global configuration
global:
  imagePullSecrets: []

secrets:
  slackBotToken: "placeholder"
  slackSigningSecret: "placeholder"
  slackAppToken: "placeholder"
  githubToken: "placeholder"
  claudeCodeOAuthToken: "placeholder"
  postgresqlPassword: "placeholder"

kubernetes:
  namespace: peerbot

# RBAC configuration
rbac:
  create: true

serviceAccount:
  create: true
  annotations: {}

# Pod Security Policy (disabled for local development)
podSecurityPolicy:
  enabled: false

# Pod Security Standards (disabled for local development)
podSecurityStandards:
  enabled: false

# Security Context
securityContext:
  enabled: false

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false

# Network Policy
networkPolicy:
  enabled: false

# Ingress
ingress:
  enabled: false

# Limit Range
limitRange:
  enabled: false


# PostgreSQL configuration
postgresql:
  enabled: true
  database: peerbot
  username: postgres
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  storage:
    size: "1Gi"
    storageClass: ""

slack:
  triggerPhrase: "@peercloud"
  socketMode: true
  allowDirectMessages: true
  allowPrivateChannels: true

claude:
  model: "claude-3-5-sonnet-20241022"
  timeoutMinutes: "5"
  allowedTools: ""

# Disable static worker deployment - workers are created dynamically by orchestrator
worker:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    tag: latest
  resources:
    requests:
      memory: "1Gi"     # Claude Code requires significant memory
      cpu: "200m"       # Increased CPU for better performance  
    limits:
      memory: "2Gi"     # Allow headroom for Claude operations
      cpu: "1000m"      # 5:1 ratio (1000m/200m = 5) to meet cluster policy
  persistence:
    enabled: true
    size: "1Gi"
    storageClass: ""  # Use default storage class
  job:
    timeoutSeconds: 300
    backoffLimit: 0
    ttlSecondsAfterFinished: 300
  env:
    USE_CLAUDE_RESUME: "true"
    CLAUDE_CODE_ENABLE_UNIFIED_READ_TOOL: "1"
    ENABLE_BACKGROUND_TASKS: "1"
    FORCE_AUTO_BACKGROUND_TASKS: "1"
    CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC: "1"
    BASH_DEFAULT_TIMEOUT_MS: "60000"
    BASH_MAX_TIMEOUT_MS: "300000"
    CLAUDE_CODE_IDE_SKIP_AUTO_INSTALL: "1"
    DISABLE_AUTOUPDATER: "1"
    K8S_SKIP_TLS_VERIFY: "true"

# GCS configuration (empty for local)
gcs:
  enabled: false
  customPorts: []

# Development settings
dispatcher:
  enabled: true
  disableRateLimit: true
  image:
    pullPolicy: IfNotPresent
    tag: latest
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  service:
    type: LoadBalancer
    port: 3000
    targetPort: 3000
  config:
    nodeEnv: "development"
    logLevel: "DEBUG"

image:
  pullPolicy: IfNotPresent


# Resource quota configuration - DISABLED for development
resourceQuota:
  enabled: false  # Disabled in dev mode to allow unlimited workers
  requests:
    cpu: "2"      # Temporarily increased to allow worker testing
    memory: "4Gi" # Temporarily increased to allow worker testing
  limits:
    cpu: "2"      # Allow dispatcher bursts
    memory: "4Gi" # Allow dispatcher bursts

# Worker-specific quota (uses worker-priority class) - DISABLED for development
workerQuota:
  enabled: false  # Disabled in dev mode
  requests:
    cpu: "2"      # ~10 concurrent threads (200m each)
    memory: "8Gi" # ~15 concurrent threads (512Mi each)
  limits:
    cpu: "4"      # Allow worker bursts
    memory: "12Gi" # Allow worker bursts
  counts:
    pods: "15"    # Max 15 concurrent worker pods
    jobs: "10"    # Legacy job limit

autoscaling:
  enabled: false

# Re-enable orchestrator - needed for dynamic worker creation
orchestrator:
  enabled: true
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Dispatcher configuration moved to line 56

config:
  githubOrganization: "peerbot-community"
  githubRepository: ""  # Optional: Override repository URL for all users
  gcsProjectId: ""
  sessionTimeoutMinutes: "5"

# pgboss configuration override
pgboss:
  expireInHours: 1  # 1 hour minimum required by pgboss

ingress:
  enabled: false
